// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.26.1
// source: pvz-service/v1/pvz-service.proto

package pvz

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackagingType int32

const (
	PackagingType_UNKNOWN PackagingType = 0
	PackagingType_BOX     PackagingType = 1
	PackagingType_BAG     PackagingType = 2
	PackagingType_FILM    PackagingType = 3
)

// Enum value maps for PackagingType.
var (
	PackagingType_name = map[int32]string{
		0: "UNKNOWN",
		1: "BOX",
		2: "BAG",
		3: "FILM",
	}
	PackagingType_value = map[string]int32{
		"UNKNOWN": 0,
		"BOX":     1,
		"BAG":     2,
		"FILM":    3,
	}
)

func (x PackagingType) Enum() *PackagingType {
	p := new(PackagingType)
	*p = x
	return p
}

func (x PackagingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackagingType) Descriptor() protoreflect.EnumDescriptor {
	return file_pvz_service_v1_pvz_service_proto_enumTypes[0].Descriptor()
}

func (PackagingType) Type() protoreflect.EnumType {
	return &file_pvz_service_v1_pvz_service_proto_enumTypes[0]
}

func (x PackagingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackagingType.Descriptor instead.
func (PackagingType) EnumDescriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{0}
}

type AcceptOrderDeliveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId        string        `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RecipientId    string        `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	StorageTime    int64         `protobuf:"varint,3,opt,name=storage_time,json=storageTime,proto3" json:"storage_time,omitempty"`
	Cost           int32         `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
	Weight         int32         `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Packaging      PackagingType `protobuf:"varint,6,opt,name=packaging,proto3,enum=pvz.v1.PackagingType" json:"packaging,omitempty"`
	AdditionalFilm bool          `protobuf:"varint,7,opt,name=additional_film,json=additionalFilm,proto3" json:"additional_film,omitempty"`
}

func (x *AcceptOrderDeliveryRequest) Reset() {
	*x = AcceptOrderDeliveryRequest{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptOrderDeliveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderDeliveryRequest) ProtoMessage() {}

func (x *AcceptOrderDeliveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderDeliveryRequest.ProtoReflect.Descriptor instead.
func (*AcceptOrderDeliveryRequest) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{0}
}

func (x *AcceptOrderDeliveryRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AcceptOrderDeliveryRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *AcceptOrderDeliveryRequest) GetStorageTime() int64 {
	if x != nil {
		return x.StorageTime
	}
	return 0
}

func (x *AcceptOrderDeliveryRequest) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *AcceptOrderDeliveryRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AcceptOrderDeliveryRequest) GetPackaging() PackagingType {
	if x != nil {
		return x.Packaging
	}
	return PackagingType_UNKNOWN
}

func (x *AcceptOrderDeliveryRequest) GetAdditionalFilm() bool {
	if x != nil {
		return x.AdditionalFilm
	}
	return false
}

type ReturnOrderDeliveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *ReturnOrderDeliveryRequest) Reset() {
	*x = ReturnOrderDeliveryRequest{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnOrderDeliveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnOrderDeliveryRequest) ProtoMessage() {}

func (x *ReturnOrderDeliveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnOrderDeliveryRequest.ProtoReflect.Descriptor instead.
func (*ReturnOrderDeliveryRequest) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{1}
}

func (x *ReturnOrderDeliveryRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GiveOrderToClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderIds []string `protobuf:"bytes,1,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
}

func (x *GiveOrderToClientRequest) Reset() {
	*x = GiveOrderToClientRequest{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GiveOrderToClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveOrderToClientRequest) ProtoMessage() {}

func (x *GiveOrderToClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveOrderToClientRequest.ProtoReflect.Descriptor instead.
func (*GiveOrderToClientRequest) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{2}
}

func (x *GiveOrderToClientRequest) GetOrderIds() []string {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

type GetOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LastN   *int32  `protobuf:"varint,2,opt,name=lastN,proto3,oneof" json:"lastN,omitempty"`
	SamePVZ *bool   `protobuf:"varint,3,opt,name=samePVZ,proto3,oneof" json:"samePVZ,omitempty"`
	Cursor  *string `protobuf:"bytes,4,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	Limit   *int32  `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetOrdersRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetOrdersRequest) GetLastN() int32 {
	if x != nil && x.LastN != nil {
		return *x.LastN
	}
	return 0
}

func (x *GetOrdersRequest) GetSamePVZ() bool {
	if x != nil && x.SamePVZ != nil {
		return *x.SamePVZ
	}
	return false
}

func (x *GetOrdersRequest) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

func (x *GetOrdersRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*PVZOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrdersResponse) GetOrders() []*PVZOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type AcceptReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *AcceptReturnRequest) Reset() {
	*x = AcceptReturnRequest{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptReturnRequest) ProtoMessage() {}

func (x *AcceptReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptReturnRequest.ProtoReflect.Descriptor instead.
func (*AcceptReturnRequest) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptReturnRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AcceptReturnRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetReturnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *int32 `protobuf:"varint,1,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize *int32 `protobuf:"varint,2,opt,name=pageSize,proto3,oneof" json:"pageSize,omitempty"`
}

func (x *GetReturnsRequest) Reset() {
	*x = GetReturnsRequest{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReturnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnsRequest) ProtoMessage() {}

func (x *GetReturnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnsRequest.ProtoReflect.Descriptor instead.
func (*GetReturnsRequest) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetReturnsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetReturnsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type GetReturnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Returns []*PVZOrder `protobuf:"bytes,1,rep,name=returns,proto3" json:"returns,omitempty"`
}

func (x *GetReturnsResponse) Reset() {
	*x = GetReturnsResponse{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReturnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnsResponse) ProtoMessage() {}

func (x *GetReturnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnsResponse.ProtoReflect.Descriptor instead.
func (*GetReturnsResponse) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetReturnsResponse) GetReturns() []*PVZOrder {
	if x != nil {
		return x.Returns
	}
	return nil
}

type PVZOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecipientId    string                 `protobuf:"bytes,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	StorageTime    int64                  `protobuf:"varint,4,opt,name=storage_time,json=storageTime,proto3" json:"storage_time,omitempty"`
	Cost           int32                  `protobuf:"varint,5,opt,name=cost,proto3" json:"cost,omitempty"`
	Weight         int32                  `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Packaging      PackagingType          `protobuf:"varint,7,opt,name=packaging,proto3,enum=pvz.v1.PackagingType" json:"packaging,omitempty"`
	AdditionalFilm bool                   `protobuf:"varint,8,opt,name=additional_film,json=additionalFilm,proto3" json:"additional_film,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PVZOrder) Reset() {
	*x = PVZOrder{}
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PVZOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVZOrder) ProtoMessage() {}

func (x *PVZOrder) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_service_v1_pvz_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVZOrder.ProtoReflect.Descriptor instead.
func (*PVZOrder) Descriptor() ([]byte, []int) {
	return file_pvz_service_v1_pvz_service_proto_rawDescGZIP(), []int{8}
}

func (x *PVZOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PVZOrder) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PVZOrder) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *PVZOrder) GetStorageTime() int64 {
	if x != nil {
		return x.StorageTime
	}
	return 0
}

func (x *PVZOrder) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *PVZOrder) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *PVZOrder) GetPackaging() PackagingType {
	if x != nil {
		return x.Packaging
	}
	return PackagingType_UNKNOWN
}

func (x *PVZOrder) GetAdditionalFilm() bool {
	if x != nil {
		return x.AdditionalFilm
	}
	return false
}

func (x *PVZOrder) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PVZOrder) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_pvz_service_v1_pvz_service_proto protoreflect.FileDescriptor

var file_pvz_service_v1_pvz_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd1, 0x02, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x24, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x24, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0c, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x28, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x28, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x6d, 0x22, 0x45, 0x0a, 0x1a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x24, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x18, 0x47,
	0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x13, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x0d, 0x92, 0x01, 0x0a, 0x08, 0x01, 0x22, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x24, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x24, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x01, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00,
	0x48, 0x00, 0x52, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x07,
	0x73, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x5a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x01, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x5a, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xe0, 0x41, 0x01, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x24, 0x48, 0x02,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x01, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x73, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x5a, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x47, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x56, 0x5a, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x65, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x24, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x24, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xe0, 0x41, 0x01, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x01, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x28, 0x00, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4a, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x56, 0x5a, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x22, 0xf9, 0x02, 0x0a, 0x08, 0x50, 0x56, 0x5a, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x33,
	0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x2a, 0x38, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x58, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x47,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x4d, 0x10, 0x03, 0x32, 0xd7, 0x05, 0x0a,
	0x0a, 0x50, 0x76, 0x7a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x13,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x83, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x76, 0x7a, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a,
	0x22, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x7e, 0x0a, 0x11, 0x47, 0x69, 0x76, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70,
	0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01,
	0x2a, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x67, 0x69, 0x76, 0x65, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x74, 0x6f,
	0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x6d, 0x0a,
	0x0c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1b, 0x2e,
	0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x2d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x68, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x76, 0x7a,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x76, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x76, 0x7a, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x42, 0x6a, 0x92, 0x41, 0x4e, 0x12, 0x25, 0x0a, 0x0b, 0x50,
	0x56, 0x5a, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0f, 0x50, 0x56, 0x5a, 0x20,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x41, 0x50, 0x49, 0x32, 0x05, 0x31, 0x2e, 0x30,
	0x2e, 0x30, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x17, 0x68, 0x6f, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x76, 0x7a, 0x2f, 0x76, 0x31, 0x3b, 0x70,
	0x76, 0x7a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pvz_service_v1_pvz_service_proto_rawDescOnce sync.Once
	file_pvz_service_v1_pvz_service_proto_rawDescData = file_pvz_service_v1_pvz_service_proto_rawDesc
)

func file_pvz_service_v1_pvz_service_proto_rawDescGZIP() []byte {
	file_pvz_service_v1_pvz_service_proto_rawDescOnce.Do(func() {
		file_pvz_service_v1_pvz_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_pvz_service_v1_pvz_service_proto_rawDescData)
	})
	return file_pvz_service_v1_pvz_service_proto_rawDescData
}

var file_pvz_service_v1_pvz_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pvz_service_v1_pvz_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pvz_service_v1_pvz_service_proto_goTypes = []any{
	(PackagingType)(0),                 // 0: pvz.v1.PackagingType
	(*AcceptOrderDeliveryRequest)(nil), // 1: pvz.v1.AcceptOrderDeliveryRequest
	(*ReturnOrderDeliveryRequest)(nil), // 2: pvz.v1.ReturnOrderDeliveryRequest
	(*GiveOrderToClientRequest)(nil),   // 3: pvz.v1.GiveOrderToClientRequest
	(*GetOrdersRequest)(nil),           // 4: pvz.v1.GetOrdersRequest
	(*GetOrdersResponse)(nil),          // 5: pvz.v1.GetOrdersResponse
	(*AcceptReturnRequest)(nil),        // 6: pvz.v1.AcceptReturnRequest
	(*GetReturnsRequest)(nil),          // 7: pvz.v1.GetReturnsRequest
	(*GetReturnsResponse)(nil),         // 8: pvz.v1.GetReturnsResponse
	(*PVZOrder)(nil),                   // 9: pvz.v1.PVZOrder
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 11: google.protobuf.Empty
}
var file_pvz_service_v1_pvz_service_proto_depIdxs = []int32{
	0,  // 0: pvz.v1.AcceptOrderDeliveryRequest.packaging:type_name -> pvz.v1.PackagingType
	9,  // 1: pvz.v1.GetOrdersResponse.orders:type_name -> pvz.v1.PVZOrder
	9,  // 2: pvz.v1.GetReturnsResponse.returns:type_name -> pvz.v1.PVZOrder
	0,  // 3: pvz.v1.PVZOrder.packaging:type_name -> pvz.v1.PackagingType
	10, // 4: pvz.v1.PVZOrder.created_at:type_name -> google.protobuf.Timestamp
	10, // 5: pvz.v1.PVZOrder.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 6: pvz.v1.PvzService.AcceptOrderDelivery:input_type -> pvz.v1.AcceptOrderDeliveryRequest
	2,  // 7: pvz.v1.PvzService.ReturnOrderDelivery:input_type -> pvz.v1.ReturnOrderDeliveryRequest
	3,  // 8: pvz.v1.PvzService.GiveOrderToClient:input_type -> pvz.v1.GiveOrderToClientRequest
	4,  // 9: pvz.v1.PvzService.GetOrders:input_type -> pvz.v1.GetOrdersRequest
	6,  // 10: pvz.v1.PvzService.AcceptReturn:input_type -> pvz.v1.AcceptReturnRequest
	7,  // 11: pvz.v1.PvzService.GetReturns:input_type -> pvz.v1.GetReturnsRequest
	11, // 12: pvz.v1.PvzService.AcceptOrderDelivery:output_type -> google.protobuf.Empty
	11, // 13: pvz.v1.PvzService.ReturnOrderDelivery:output_type -> google.protobuf.Empty
	11, // 14: pvz.v1.PvzService.GiveOrderToClient:output_type -> google.protobuf.Empty
	5,  // 15: pvz.v1.PvzService.GetOrders:output_type -> pvz.v1.GetOrdersResponse
	11, // 16: pvz.v1.PvzService.AcceptReturn:output_type -> google.protobuf.Empty
	8,  // 17: pvz.v1.PvzService.GetReturns:output_type -> pvz.v1.GetReturnsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pvz_service_v1_pvz_service_proto_init() }
func file_pvz_service_v1_pvz_service_proto_init() {
	if File_pvz_service_v1_pvz_service_proto != nil {
		return
	}
	file_pvz_service_v1_pvz_service_proto_msgTypes[3].OneofWrappers = []any{}
	file_pvz_service_v1_pvz_service_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pvz_service_v1_pvz_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pvz_service_v1_pvz_service_proto_goTypes,
		DependencyIndexes: file_pvz_service_v1_pvz_service_proto_depIdxs,
		EnumInfos:         file_pvz_service_v1_pvz_service_proto_enumTypes,
		MessageInfos:      file_pvz_service_v1_pvz_service_proto_msgTypes,
	}.Build()
	File_pvz_service_v1_pvz_service_proto = out.File
	file_pvz_service_v1_pvz_service_proto_rawDesc = nil
	file_pvz_service_v1_pvz_service_proto_goTypes = nil
	file_pvz_service_v1_pvz_service_proto_depIdxs = nil
}
